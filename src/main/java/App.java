
import java.util.*;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class App {
    private ItemRepository itemRepository;
    private SalesPromotionRepository salesPromotionRepository;

    public App(ItemRepository itemRepository, SalesPromotionRepository salesPromotionRepository) {
        this.itemRepository = itemRepository;
        this.salesPromotionRepository = salesPromotionRepository;
    }

    public String bestCharge(List<String> inputs) {
        //TODO: write code here
        String result = "";
        // get all item
        List<Item> itemList = itemRepository.findAll();
        // 存储用户的菜单项和数量
        Map<Item, Integer> detailMenuMap = new LinkedHashMap<>();

        // 获取用户的菜单
        inputs.forEach(input -> {
            // 获取用户的菜单编号和数量
            String[] inputStr = input.split("x");
            Item orderItem = getItemFromId(inputStr[0].trim(), itemList);
            Integer count = Integer.parseInt(inputStr[1].trim());
            detailMenuMap.put(orderItem, count);
        });
        // 比较优惠方式
        List<SalesPromotion> salesPromotionList = salesPromotionRepository.findAll();
        // 满30 - 6
        double total1 = getTotalSave6Per30(detailMenuMap);
        double total2 = getTotalForDiscount(detailMenuMap, salesPromotionList.get(1));

        if (total1 <= total2) {
            // 使用满30 - 6优惠方式
            result = getResultOfSave6Per30(detailMenuMap, total1);
        } else {
            // 使用指定菜品半价优惠方式
            // todo
            result = getResultOfDiscount(detailMenuMap, salesPromotionList.get(1), total2);
        }
        return result;
    }

    // 根据id获取Item
    private Item getItemFromId(String itemId, List<Item> itemList) {
        for (int i = 0; i < itemList.size(); i++) {
            Item item = itemList.get(i);
            if (itemId.equals(item.getId())) {
                return item;
            }
        }
        return null;
    }

    // 满30 - 6
    private double getTotalSave6Per30(Map<Item, Integer> detailMenuMap) {
        double total = 0;
        for (Item item : detailMenuMap.keySet()) {
            total += item.getPrice() * detailMenuMap.get(item);
        }
        total = (total > 30) ? total - (int)(total / 30) * 6 : total;
        return total;
    }

    // 指定商品半价
    private double getTotalForDiscount(Map<Item, Integer> detailMenuMap, SalesPromotion salesPromotion) {
        double total = 0;
        for (Item item : detailMenuMap.keySet()) {
            boolean isDiscount = false;
            for (String itemId : salesPromotion.getRelatedItems()) {
                if (item.getId().equals(itemId)) {
                    total += item.getPrice() * detailMenuMap.get(item) * 0.5;
                    isDiscount = true;
                    break;
                }
            }
            if (!isDiscount)
                total += item.getPrice() * detailMenuMap.get(item);
        }
        return total;
    }

    // 打印结果菜单
    private String getResultOfSave6Per30 (Map<Item, Integer> detailMenuMap, double totalPrice) {
        StringBuffer resultBuffer = new StringBuffer();
        resultBuffer.append("============= 订餐明细 =============\n");
        double originalPrice = 0;
        for (Item item : detailMenuMap.keySet()) {
            Integer count = detailMenuMap.get(item);
            originalPrice += item.getPrice() * count;
            resultBuffer.append(item.getName() + " x " + count + " = " + (int)item.getPrice() * count + "元\n");
        }
        resultBuffer.append("-----------------------------------\n");
        if(originalPrice > 30) {
            resultBuffer.append("使用优惠:\n");
            resultBuffer.append("满30减6元，省" + (int)(originalPrice / 30 ) * 6  + "元\n");
            resultBuffer.append("-----------------------------------\n");
        }
        resultBuffer.append("总计：" + (int)totalPrice + "元\n");
        resultBuffer.append("===================================");
        return resultBuffer.toString();
    }

    private String getResultOfDiscount(Map<Item, Integer> detailMenuMap, SalesPromotion salesPromotion, double totalPrice) {
        StringBuffer resultBuffer = new StringBuffer();
        resultBuffer.append("============= 订餐明细 =============\n");
        double saveMoney = 0;
        List<String> discountItemName = new ArrayList<>();
        for (Item item : detailMenuMap.keySet()) {
            Integer count = detailMenuMap.get(item);
            for (String itemId : salesPromotion.getRelatedItems()) {
                if (item.getId().equals(itemId)) {
                    saveMoney += item.getPrice() * count * 0.5;
                    discountItemName.add(item.getName());
                    break;
                }
            }
            resultBuffer.append(item.getName() + " x " + count + " = " + (int)item.getPrice() * count + "元\n");
        }

        resultBuffer.append("-----------------------------------\n");
        resultBuffer.append("使用优惠:\n");
        resultBuffer.append("指定菜品半价(" + String.format("%s", discountItemName).replace("[", "").replace("]", "").replace(" ", "") + ")，省" + (int)saveMoney + "元\n");
        resultBuffer.append("-----------------------------------\n");
        resultBuffer.append("总计：" + (int)totalPrice + "元\n");
        resultBuffer.append("===================================");
        return resultBuffer.toString();
    }
}
